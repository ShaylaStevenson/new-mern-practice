{"version":3,"sources":["img/png-tree-bulb.png","registerServiceWorker.js","pages/Home/index.js","pages/TestPage/index.js","components/BottomIcon/index.js","components/LoginModal/index.js","components/DrawerLinks/index.js","components/SideDrawer/index.js","components/DrawerBottom/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","useStyles","makeStyles","theme","paperContainer","backgroundColor","backgroundImage","concat","bulb","minHeight","backgroundPositionX","backgroundPositionY","backgroundRepeat","backgroundSize","text","color","purple","Home","classes","react_default","a","createElement","Paper","elevation","className","TestPage","style","marginTop","root","display","position","right","left","marginRight","marginLeft","top","bottom","marginBottom","minWidth","height","width","zIndex","menuStyles","fontSize","teal","grey","palette","getContrastText","large","spacing","BottomHamburger","Avatar","MenuRounded_default","BottomClose","CloseRounded_default","Modal","setAppElement","LoginModal","_ref","isOpen","closeModal","lib_default","onClick","linkText","&:hover","textDecoration","disabledLinkText","listItemText","flex","textAlign","DrawerLinks","toggleModal","closeDrawer","modalIsOpen","react_router_dom","to","List","ListItem","button","key","ListItemText","primary","disabled","transitionDuration","content","flexGrow","padding","transition","transitions","create","easing","sharp","duration","contentShift","easeOut","drawer","flexShrink","drawerPaper","alignItems","justifyContent","paddingBottom","DrawerBottom","_useState","useState","_useState2","Object","slicedToArray","drawerIsOpen","setDrawerOpen","_useState3","_useState4","setModalOpen","prevState","BottomIcon_BottomClose","BottomIcon_BottomHamburger","Drawer","open","onClose","variant","anchor","enter","exit","paper","PaperProps","App","react_router","exact","path","pages_Home","pages_TestPage","ReactDOM","render","basename","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.902b46bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/png-tree-bulb.a49b22b8.png\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\n//import profilePicture from \"../../img/profilePicture.jpg\";\r\n//import creativeDesignScreen from \"../../img/creativeDesignScreen.png\"\r\n//import handsMobile from \"../../img/handsMobile.png\"\r\nimport bulb from \"../../img/png-tree-bulb.png\"\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { purple } from '@material-ui/core/colors'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paperContainer:{  \r\n        backgroundColor: \"#000000\",\r\n        backgroundImage: `url(${bulb})`,\r\n        minHeight: \"100vh\",\r\n        backgroundPositionX: \"center\",\r\n        backgroundPositionY: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"contain\",\r\n        \r\n        //backgroundColor:\"transparent\",\r\n    },\r\n    text:{\r\n        color: purple[50]\r\n    }\r\n}))\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Paper\r\n            elevation={1}\r\n            className={classes.paperContainer}>\r\n            \r\n            {/* <h1 className={classes.text}>New Mern Practice</h1>\r\n            <h2 className={classes.text}>Author: Shayla Stevenson</h2> */}\r\n            {/* <img src={creativeDesignScreen} alt=\"Shayla Stevenson\" /> */}\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst TestPage = () => {\r\n    return(\r\n        <div>\r\n            <h1 style={{color:\"#fff\", marginTop:\"80px\"}}>I love you, mom!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestPage","import React from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport MenuIcon from '@material-ui/icons/MenuRounded';\r\nimport CloseIcon from '@material-ui/icons/CloseRounded'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { pink, green, grey, lightGreen, lime, teal } from '@material-ui/core/colors'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        position: \"fixed\",\r\n\r\n        //center on x-axis\r\n        right: 0,\r\n        left: 0,\r\n        marginRight: \"auto\",\r\n        marginLeft: \"auto\",\r\n\r\n        // center on y-axis\r\n        // top: 0,\r\n        // bottom: 0,\r\n        // marginTop: \"auto\",\r\n        // marginBottom: \"auto\",\r\n        \r\n        top: 0,\r\n        bottom: 0,\r\n        marginTop: \"75vh\",\r\n        marginBottom: \"auto\",\r\n\r\n        // add dementions for \"fixed\" elements\r\n        minHeight: \"80px\",\r\n        minWidth: \"80px\",\r\n        height: \"80px\",\r\n        width: \"80px\",\r\n\r\n        // set higher than drawer and modal\r\n        zIndex: 1350\r\n    },\r\n    menuStyles: {\r\n        fontSize: 60\r\n    },\r\n    teal: {\r\n        color: \"#000000\",\r\n        backgroundColor: teal[400],\r\n    },  \r\n    grey: {\r\n        color: theme.palette.getContrastText(grey[500]),\r\n        backgroundColor: grey[700],\r\n    },\r\n    large: {\r\n        width: theme.spacing(10),\r\n        height: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport const BottomHamburger = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <Avatar className={`${classes.teal} ${classes.large}`}>\r\n                <MenuIcon className={classes.menuStyles} />\r\n            </Avatar>\r\n\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport const BottomClose = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <Avatar className={`${classes.grey} ${classes.large}`}>\r\n                <CloseIcon className={classes.menuStyles} />\r\n            </Avatar>\r\n        </div>  \r\n    )\r\n}","import React from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// required to meet accesibility standards\r\nModal.setAppElement('#root');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root:{\r\n    //zIndex: 1400\r\n  }\r\n}));\r\n\r\nexport default function LoginModal({ isOpen, closeModal }) {\r\n  //console.log(props.isOpen)\r\n  // make zindex greater than that of BottomIcon\r\n  const classes = useStyles();\r\n  return (\r\n      <div>\r\n        <Modal\r\n        \r\n          \r\n          isOpen={isOpen}\r\n        >\r\n          <h2>Login</h2>\r\n          <form>\r\n            <h4>Username</h4>\r\n            <input/>\r\n            <h4>Password</h4>\r\n            <input/>\r\n          </form>\r\n          <p style={{color:\"#ff0042\"}}>Close login screen here</p>\r\n          <button onClick={closeModal}>close</button>\r\n        </Modal>\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemText } from '@material-ui/core';\r\n//ListItemIcon\r\nimport purple from '@material-ui/core/colors/purple';\r\n\r\n//import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        // display: 'flex',\r\n        // '& > *': {\r\n        //   margin: theme.spacing(1),\r\n        // },\r\n        // justifyContent: \"flex-end\",\r\n        // position: \"fixed\",\r\n        // right: 0,\r\n        // bottom: 0,\r\n        // padding: \"8px\",\r\n        // zIndex: 1400\r\n    },\r\n    // green: {\r\n    //     color: '#fff',\r\n    //     backgroundColor: green[500],\r\n    // }, \r\n\r\n    linkText: {\r\n        color: purple[50],\r\n        '&:hover': {\r\n            color: purple[200],\r\n            textDecoration: \"none\"\r\n         },\r\n         \r\n    },\r\n    disabledLinkText: {\r\n        color: purple[800],\r\n        '&:hover': {\r\n            color: purple[800],\r\n            textDecoration: \"none\",\r\n         },\r\n    },\r\n\r\n    listItemText: {\r\n        flex: 1,\r\n        textAlign: \"right\"\r\n\r\n    },\r\n\r\n\r\n}));\r\n\r\nexport default function DrawerLinks({ toggleModal, closeDrawer, modalIsOpen }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Link to='/'  onClick={closeDrawer} className={classes.linkText}>\r\n                <List>\r\n                    <ListItem button key='Home'>\r\n                        {/* <ListItemIcon><AccountCircleIcon/>\r\n                        </ListItemIcon> */}\r\n                        <ListItemText style={{fontSize:\"large\"}} className={classes.listItemText} primary='Home' />\r\n                    </ListItem>\r\n                </List>\r\n            </Link>\r\n            <Link to='/test-page' onClick={closeDrawer} className={classes.linkText}>\r\n                <List>\r\n                    <ListItem button key='Test Page'>\r\n                        <ListItemText className={classes.listItemText} primary='Click Me' />\r\n                    </ListItem>\r\n                </List>\r\n            </Link>\r\n            \r\n            {!modalIsOpen ? \r\n            <Link to='#' onClick={toggleModal} className={classes.linkText}>      \r\n                <List>\r\n                    <ListItem button key='Login'>\r\n                        <ListItemText className={classes.listItemText} primary='Login' />\r\n                    </ListItem>\r\n                </List>\r\n            </Link>\r\n            :\r\n            <Link to=\"#\" disabled className={classes.disabledLinkText}>\r\n                <List>\r\n                    <ListItem button key='Login'>\r\n                        <ListItemText className={classes.listItemText} primary='Login' />\r\n                    </ListItem>\r\n                </List>\r\n                \r\n            </Link>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { BottomHamburger, BottomClose } from '../BottomIcon';\r\nimport LoginModal from '../LoginModal';\r\nimport DrawerLinks from '../DrawerLinks';\r\nimport { blue } from '@material-ui/core/colors'\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst transitionDuration = 1000; //can also use theme.transitions.duration\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // sideNav: {\r\n    //     marginTop: '-60px',\r\n    //     zIndex: 3,\r\n    //     marginRight: '0px',\r\n    //     position: 'flex',\r\n    // },\r\n    \r\n    // blue: {\r\n    //     color: theme.palette.getContrastText(blue[500]),\r\n    //     backgroundColor: blue[500],\r\n    // },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: transitionDuration\r\n        }),\r\n        marginRight: -drawerWidth\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: transitionDuration\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    \r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        //backgroundColor: \"rgba(0,0,0,0.6)\" Don't target here\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: \"rgba(60,12,120,0.5)\", //target here\r\n        // transparentish rgba(120,120,120,0.2)\r\n        display:\"flex\",\r\n        alignItems:\"flex-end\",\r\n        justifyContent:\"flex-end\",\r\n        paddingBottom: \"80px\"\r\n    }\r\n}));\r\n\r\nexport default function SideDrawer() {\r\n  const classes = useStyles();\r\n\r\n    // Manage the state of the Drawer\r\n    const [drawerIsOpen, setDrawerOpen] = useState(false);\r\n        console.log(\"drawerIsOpen: \" + drawerIsOpen)\r\n  \r\n    function toggleDrawer() {\r\n        setDrawerOpen(prevState => !prevState);\r\n    }\r\n\r\n    function closeDrawer() {\r\n        setDrawerOpen(false);\r\n    }\r\n\r\n    // Manage the state of the Login Modal\r\n    const [modalIsOpen, setModalOpen] = useState(false);\r\n        console.log(\"modalIsOpen: \" + modalIsOpen)\r\n\r\n    function toggleModal() {\r\n        setModalOpen(prevState => !prevState);\r\n        setDrawerOpen(false)\r\n    }\r\n\r\n    function closeModal() {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {/* display drawer icon */}\r\n            <div onClick={toggleDrawer}>\r\n                {!drawerIsOpen ? <BottomHamburger/> : <BottomClose/> }\r\n            </div>\r\n\r\n            {/* display drawer contents*/}\r\n            <Drawer\r\n                open={drawerIsOpen}\r\n                onClose={closeDrawer}\r\n                className={classes.drawer}\r\n                variant=\"temporary\"\r\n                elevation={3}\r\n                anchor=\"right\"\r\n                transitionDuration={{\r\n                    enter: transitionDuration,\r\n                    exit: transitionDuration\r\n                }}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n                PaperProps={{ elevation: 9 }}\r\n            >\r\n                <DrawerLinks\r\n                    toggleModal={toggleModal}\r\n                    closeDrawer={closeDrawer}\r\n                    modalIsOpen={modalIsOpen}\r\n                />\r\n            </Drawer>\r\n\r\n            {/* display login modal when link selected */}\r\n            <LoginModal\r\n                isOpen={modalIsOpen}\r\n                closeModal={closeModal}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { BottomHamburger, BottomClose } from '../BottomIcon';\r\nimport LoginModal from '../LoginModal';\r\nimport DrawerLinks from '../DrawerLinks';\r\n\r\nconst drawerWidth = \"100vw\";\r\nconst transitionDuration = 1000; //can also use theme.transitions.duration\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // sideNav: {\r\n    //     marginTop: '-60px',\r\n    //     zIndex: 3,\r\n    //     marginRight: '0px',\r\n    //     position: 'flex',\r\n    // },\r\n    \r\n    // blue: {\r\n    //     color: theme.palette.getContrastText(blue[500]),\r\n    //     backgroundColor: blue[500],\r\n    // },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: transitionDuration\r\n        }),\r\n        marginRight: -drawerWidth\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: transitionDuration\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    \r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        //marginTop: \"-60px\"\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        height: \"90vh\",\r\n        backgroundColor: \"rgba(60,12,120,0.6)\", //target here\r\n        // transparentish rgba(120,120,120,0.2)\r\n        display:\"flex\",\r\n        alignItems:\"flex-end\",\r\n        justifyContent:\"flex-end\",\r\n        paddingBottom: \"80px\"\r\n    }\r\n}));\r\n\r\nexport default function DrawerBottom() {\r\n  const classes = useStyles();\r\n\r\n    // Manage the state of the Drawer\r\n    const [drawerIsOpen, setDrawerOpen] = useState(false);\r\n        console.log(\"drawerIsOpen: \" + drawerIsOpen)\r\n  \r\n    function toggleDrawer() {\r\n        setDrawerOpen(prevState => !prevState);\r\n    }\r\n\r\n    function closeDrawer() {\r\n        setDrawerOpen(false);\r\n    }\r\n\r\n    // Manage the state of the Login Modal\r\n    const [modalIsOpen, setModalOpen] = useState(false);\r\n        console.log(\"modalIsOpen: \" + modalIsOpen)\r\n\r\n    function toggleModal() {\r\n        setModalOpen(prevState => !prevState);\r\n        setDrawerOpen(false)\r\n    }\r\n\r\n    function closeModal() {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {/* display drawer icon */}\r\n            <div onClick={toggleDrawer}>\r\n                {!drawerIsOpen ? <BottomHamburger/> : <BottomClose/> }\r\n            </div>\r\n\r\n            {/* display drawer contents*/}\r\n            <Drawer\r\n                open={drawerIsOpen}\r\n                onClose={closeDrawer}\r\n                className={classes.drawer}\r\n                variant=\"temporary\"\r\n                elevation={10}\r\n                anchor=\"bottom\"\r\n                transitionDuration={{\r\n                    enter: transitionDuration,\r\n                    exit: transitionDuration\r\n                }}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n                PaperProps={{ elevation: 20 }}\r\n            >\r\n                \r\n                <DrawerLinks\r\n                    toggleModal={toggleModal}\r\n                    closeDrawer={closeDrawer}\r\n                    modalIsOpen={modalIsOpen}\r\n                />\r\n                {/* use this code to add bottom icon to the drawer */}\r\n                {/* <div onClick={toggleDrawer}>\r\n                    <BottomClose/>\r\n                </div> */}\r\n                \r\n            </Drawer>\r\n\r\n            {/* display login modal when link selected */}\r\n            <LoginModal\r\n                isOpen={modalIsOpen}\r\n                closeModal={closeModal}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport {  Route, Switch } from \"react-router-dom\";\n//used HashRouter in order to deploy to gh pages; set up in index.js\n//BrowserRouter as Router,\n//import Navigation from \"./components/Navigation\";\n//import Footer from \"./components/Footer\"\nimport Home from \"./pages/Home\"\nimport \"./App.css\";\nimport TestPage from \"./pages/TestPage\";\n//import Card from \"react-bootstrap/Card\"\nimport SideDrawer from \"./components/SideDrawer\";\nimport DrawerBottom from \"./components/DrawerBottom\";\nconst App = () => {\n    return (\n      <div className=\"App\">\n        {/* <Router> */}\n          <div>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/test-page\">\n                <TestPage />\n              </Route>\n            </Switch>\n           <DrawerBottom/>\n            {/* <Card><h4>I am a card, YEAH!</h4></Card> */}\n            {/* <SideDrawer/> */}\n            {/* <BottomHamburger /> */}\n            {/* <Footer/> */}\n\n          </div>\n        {/* </Router> */}\n      </div>\n    );\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n// use HashRouter when deploying to gh-pages\nReactDOM.render(\n    // todo: look up:\n    // <React.StrictMode>\n      // name of the github repo\n      <HashRouter basename=\"/new-mern-practice\">\n        <App />\n      </HashRouter>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n  registerServiceWorker();"],"sourceRoot":""}