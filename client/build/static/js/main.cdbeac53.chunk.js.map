{"version":3,"sources":["img/profilePicture.jpg","registerServiceWorker.js","pages/Home/index.js","pages/TestPage/index.js","components/BottomIcon/index.js","components/LoginModal/index.js","components/DrawerLinks/index.js","components/SideDrawer/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","Home","react_default","a","createElement","src","profilePicture","alt","TestPage","useStyles","makeStyles","theme","root","display","& > *","margin","spacing","justifyContent","position","right","bottom","padding","zIndex","menuStyles","fontSize","green","color","backgroundColor","pink","palette","getContrastText","large","width","height","BottomHamburger","classes","className","Avatar","concat","MenuRounded_default","BottomClose","CloseRounded_default","LoginModal","_ref","isOpen","closeModal","lib_default","onClick","Modal","setAppElement","DrawerLinks","toggleModal","closeDrawer","modalIsOpen","react_router_dom","to","List","ListItem","button","key","ListItemText","style","textAlign","flex","primary","disabled","transitionDuration","content","flexGrow","transition","transitions","create","easing","sharp","duration","marginRight","contentShift","easeOut","drawer","flexShrink","drawerPaper","alignItems","paddingBottom","SideDrawer","_useState","useState","_useState2","Object","slicedToArray","drawerIsOpen","setDrawerOpen","_useState3","_useState4","setModalOpen","prevState","BottomIcon_BottomClose","BottomIcon_BottomHamburger","Drawer","open","onClose","variant","elevation","anchor","enter","exit","paper","PaperProps","App","react_router","exact","path","pages_Home","pages_TestPage","Card","ReactDOM","render","basename","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qMCUlCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,uDCzDlDC,EAVF,WACT,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OAAKC,IAAKC,IAAgBC,IAAI,uBCE3BC,SARE,WACb,OACIN,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mICGNK,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,QAAS,OACTC,QAAS,CACPC,OAAQJ,EAAMK,QAAQ,IAExBC,eAAgB,WAChBC,SAAU,QACVC,MAAO,EACPC,OAAQ,EACRC,QAAS,MACTC,OAAQ,MAEZC,WAAY,CACRC,SAAU,IAEdC,MAAO,CACHC,MAAO,OACPC,gBAAiBF,IAAM,MAE3BG,KAAM,CACFF,MAAOf,EAAMkB,QAAQC,gBAAgBF,IAAK,MAC1CD,gBAAiBC,IAAK,MAE1BG,MAAO,CACHC,MAAOrB,EAAMK,QAAQ,GACrBiB,OAAQtB,EAAMK,QAAQ,OAIjBkB,EAAkB,WAC3B,IAAMC,EAAU1B,IAChB,OACIP,EAAAC,EAAAC,cAAA,OAAKgC,UAAWD,EAAQvB,MACpBV,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,UAAS,GAAAE,OAAKH,EAAQP,KAAb,KAAAU,OAAqBH,EAAQJ,QAC1C7B,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,CAAUiC,UAAWD,EAAQZ,gBAOhCiB,EAAc,WACvB,IAAML,EAAU1B,IAChB,OACIP,EAAAC,EAAAC,cAAA,OAAKgC,UAAWD,EAAQvB,MACpBV,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAQD,UAAS,GAAAE,OAAKH,EAAQV,MAAb,KAAAa,OAAsBH,EAAQJ,QAC3C7B,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWiC,UAAWD,EAAQZ,iCCjD/B,SAASmB,EAATC,GAA4C,IAAtBC,EAAsBD,EAAtBC,OAAQC,EAAcF,EAAdE,WAI3C,OACI3C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0C,EAAA3C,EAAD,CACEyC,OAAQA,GAER1C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,eAEFF,EAAAC,EAAAC,cAAA,UAAQ2C,QAASF,GAAjB,WAlBVG,IAAMC,cAAc,wCCIL,SAASC,EAATP,GAAgE,IAAzCQ,EAAyCR,EAAzCQ,YAAaC,EAA4BT,EAA5BS,YAAaC,EAAeV,EAAfU,YAE5D,OACInD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,GAAG,IAAIR,QAASK,GAClBlD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,QAGjBzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAcC,MAAO,CAACrC,SAAU,EAAGsC,UAAU,QAASC,KAAK,GAAIC,QAAQ,YAInF9D,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,GAAG,aAAaR,QAASK,GAC3BlD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,aAGjBzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAcC,MAAO,CAACrC,SAAU,GAAIsC,UAAU,QAASC,KAAK,GAAIC,QAAQ,iBAKlFX,EAWFnD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,GAAG,IAAIU,UAAQ,GACjB/D,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,SAGjBzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAcC,MAAO,CAACrC,SAAU,GAAIsC,UAAU,QAASC,KAAK,GAAIC,QAAQ,aAfpF9D,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAMC,GAAG,IAAIR,QAASI,GAClBjD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACItD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAI,SAGjBzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAcC,MAAO,CAACrC,SAAU,GAAIsC,UAAU,QAASC,KAAK,GAAIC,QAAQ,cC3BhG,IACME,EAAqB,IAErBzD,EAAYC,YAAW,SAACC,GAAD,MAAY,CAYrCwD,QAAS,CACLC,SAAU,EACV/C,QAASV,EAAMK,QAAQ,GACvBqD,WAAY1D,EAAM2D,YAAYC,OAAO,SAAU,CAC7CC,OAAQ7D,EAAM2D,YAAYE,OAAOC,MACjCC,SAAUR,IAEZS,aAtBY,KAwBhBC,aAAc,CACVP,WAAY1D,EAAM2D,YAAYC,OAAO,SAAU,CAC7CC,OAAQ7D,EAAM2D,YAAYE,OAAOK,QACjCH,SAAUR,IAEZS,YAAa,GAIjBG,OAAQ,CACJ9C,MAlCY,IAmCZ+C,WAAY,GAGhBC,YAAa,CACThD,MAvCY,IAwCZL,gBAAiB,sBAEjBd,QAAQ,OACRoE,WAAW,WACXhE,eAAe,WACfiE,cAAe,WAIR,SAASC,IACtB,IAAMhD,EAAU1B,IADmB2E,EAIKC,oBAAS,GAJdC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAI1BK,EAJ0BH,EAAA,GAIZI,EAJYJ,EAAA,GAWjC,SAASlC,IACLsC,GAAc,GAPd7F,QAAQC,IAAI,iBAAmB2F,GALF,IAAAE,EAgBGN,oBAAS,GAhBZO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAgB1BtC,EAhB0BuC,EAAA,GAgBbC,EAhBaD,EAAA,GA4BjC,OAXI/F,QAAQC,IAAI,gBAAkBuD,GAY9BnD,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAAA,OAAK2C,QAxBb,WACI2C,EAAc,SAAAI,GAAS,OAAKA,MAwBlBL,EAAoCvF,EAAAC,EAAAC,cAAC2F,EAAD,MAArB7F,EAAAC,EAAAC,cAAC4F,EAAD,OAIrB9F,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CACIC,KAAMT,EACNU,QAAS/C,EACThB,UAAWD,EAAQ2C,OACnBsB,QAAQ,YACRC,UAAW,EACXC,OAAO,QACPpC,mBAAoB,CAChBqC,MAAOrC,EACPsC,KAAMtC,GAEV/B,QAAS,CACLsE,MAAOtE,EAAQ6C,aAEnB0B,WAAY,CAAEL,UAAW,IAEzBnG,EAAAC,EAAAC,cAAC8C,EAAD,CACIC,YAlChB,WACI0C,EAAa,SAAAC,GAAS,OAAKA,IAC3BJ,GAAc,IAiCFtC,YAAaA,EACbC,YAAaA,KAKrBnD,EAAAC,EAAAC,cAACsC,EAAD,CACIE,OAAQS,EACRR,WAtCZ,WACIgD,GAAa,OCzErB,IAyBec,EAzBH,WACR,OACEzG,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,OAEXlC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,KAChB5G,EAAAC,EAAAC,cAAC2G,EAAD,OAEF7G,EAAAC,EAAAC,cAACwG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAChB5G,EAAAC,EAAAC,cAAC4G,EAAD,QAIJ9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,KAAM/G,EAAAC,EAAAC,cAAA,iCACNF,EAAAC,EAAAC,cAAC+E,EAAD,SChBZ+B,IAASC,OAIHjH,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAY8D,SAAS,sBACnBlH,EAAAC,EAAAC,cAACiH,EAAD,OAGJC,SAASC,eAAe,SREb,WACb,GAA6C,kBAAmBrI,UAAW,CAGzE,GADkB,IAAIsI,IAAIC,qBAAwB7I,OAAOC,UAC3C6I,SAAW9I,OAAOC,SAAS6I,OAIvC,OAGF9I,OAAO+I,iBAAiB,OAAQ,WAC9B,IAAM1I,EAAK,GAAAqD,OAAMmF,qBAAN,sBAEN/I,EAwCX,SAAiCO,GAE/B2I,MAAM3I,GACHI,KAAK,SAAAwI,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C/I,UAAUC,cAAc+I,MAAM7I,KAAK,SAAAC,GACjCA,EAAa6I,aAAa9I,KAAK,WAC7BT,OAAOC,SAASuJ,aAKpBpJ,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEAzDAuI,CAAwBpJ,GAHxBD,EAAgBC,MQhBtBqJ","file":"static/js/main.cdbeac53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilePicture.ab2c3997.jpg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport profilePicture from \"../../img/profilePicture.jpg\";\r\n\r\nconst Home = () => {\r\n    return(\r\n        <div>\r\n            <h1>New Mern Practice</h1>\r\n            <h2>Author: Shayla Stevenson</h2>\r\n            <img src={profilePicture} alt=\"Shayla Stevenson\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\n\r\nconst TestPage = () => {\r\n    return(\r\n        <div>\r\n            <h1>This is the test page</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestPage","import React from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport MenuIcon from '@material-ui/icons/MenuRounded';\r\nimport CloseIcon from '@material-ui/icons/CloseRounded'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { pink, green } from '@material-ui/core/colors'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n          margin: theme.spacing(1),\r\n        },\r\n        justifyContent: \"flex-end\",\r\n        position: \"fixed\",\r\n        right: 0,\r\n        bottom: 0,\r\n        padding: \"8px\",\r\n        zIndex: 1400\r\n    },\r\n    menuStyles: {\r\n        fontSize: 40\r\n    },\r\n    green: {\r\n        color: '#fff',\r\n        backgroundColor: green[500],\r\n    },  \r\n    pink: {\r\n        color: theme.palette.getContrastText(pink[500]),\r\n        backgroundColor: pink[500],\r\n    },\r\n    large: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(7),\r\n    },\r\n}));\r\n\r\nexport const BottomHamburger = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <Avatar className={`${classes.pink} ${classes.large}`}>\r\n                <MenuIcon className={classes.menuStyles} />\r\n            </Avatar>\r\n\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport const BottomClose = () => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <Avatar className={`${classes.green} ${classes.large}`}>\r\n                <CloseIcon className={classes.menuStyles} />\r\n            </Avatar>\r\n        </div>  \r\n    )\r\n}","import React from \"react\";\r\nimport Modal from 'react-modal';\r\n\r\n// required to meet accesibility standards\r\nModal.setAppElement('#root');\r\n\r\nexport default function LoginModal({ isOpen, closeModal }) {\r\n  //console.log(props.isOpen)\r\n  // make zindex greater than that of BottomIcon\r\n\r\n  return (\r\n      <div>\r\n        <Modal\r\n          isOpen={isOpen}\r\n        >\r\n          <h2>Login</h2>\r\n          <form>\r\n            <h4>Username</h4>\r\n            <input/>\r\n            <h4>Password</h4>\r\n            <input/>\r\n          </form>\r\n          <button onClick={closeModal}>close</button>\r\n        </Modal>\r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemText }\r\n//ListItemIcon\r\n    from '@material-ui/core';\r\n//import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nexport default function DrawerLinks({ toggleModal, closeDrawer, modalIsOpen }) {\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' onClick={closeDrawer} >\r\n                <List>\r\n                    <ListItem button key='Home'>\r\n                        {/* <ListItemIcon><AccountCircleIcon/>\r\n                        </ListItemIcon> */}\r\n                        <ListItemText style={{fontSize: 4, textAlign:'right', flex:1}} primary='Home' />\r\n                    </ListItem>\r\n                </List>\r\n            </Link>\r\n            <Link to='/test-page' onClick={closeDrawer}>\r\n                <List>\r\n                    <ListItem button key='Test Page'>\r\n                        {/* <ListItemIcon><AccountCircleIcon/>\r\n                        </ListItemIcon> */}\r\n                        <ListItemText style={{fontSize: 18, textAlign:'right', flex:1}} primary='Test Page' />\r\n                    </ListItem>\r\n                </List>\r\n            </Link>\r\n            \r\n            {!modalIsOpen ? \r\n            <Link to='#' onClick={toggleModal}>      \r\n                <List>\r\n                    <ListItem button key='Login'>\r\n                        {/* <ListItemIcon><AccountCircleIcon/>\r\n                        </ListItemIcon> */}\r\n                        <ListItemText style={{fontSize: 18, textAlign:'right', flex:1}} primary='Login' />\r\n                    </ListItem>\r\n                </List>\r\n            </Link>\r\n            :\r\n            <Link to=\"#\" disabled>\r\n                <List>\r\n                    <ListItem button key='Login'>\r\n                        {/* <ListItemIcon><AccountCircleIcon/>\r\n                        </ListItemIcon> */}\r\n                        <ListItemText style={{fontSize: 18, textAlign:'right', flex:1}} primary='Login' />\r\n                    </ListItem>\r\n                </List>\r\n                \r\n            </Link>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport { Drawer } from '@material-ui/core';\r\nimport { BottomHamburger, BottomClose } from '../BottomIcon';\r\nimport LoginModal from '../LoginModal';\r\nimport DrawerLinks from '../DrawerLinks';\r\nimport { blue } from '@material-ui/core/colors'\r\n\r\n\r\nconst drawerWidth = 240;\r\nconst transitionDuration = 1000; //can also use theme.transitions.duration\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // sideNav: {\r\n    //     marginTop: '-60px',\r\n    //     zIndex: 3,\r\n    //     marginRight: '0px',\r\n    //     position: 'flex',\r\n    // },\r\n    \r\n    // blue: {\r\n    //     color: theme.palette.getContrastText(blue[500]),\r\n    //     backgroundColor: blue[500],\r\n    // },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: transitionDuration\r\n        }),\r\n        marginRight: -drawerWidth\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create(\"margin\", {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: transitionDuration\r\n        }),\r\n        marginRight: 0\r\n    },\r\n    \r\n\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        //backgroundColor: \"rgba(0,0,0,0.6)\" Don't target here\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n        backgroundColor: \"rgba(60,12,120,0.5)\", //target here\r\n        // transparentish rgba(120,120,120,0.2)\r\n        display:\"flex\",\r\n        alignItems:\"flex-end\",\r\n        justifyContent:\"flex-end\",\r\n        paddingBottom: \"80px\"\r\n    }\r\n}));\r\n\r\nexport default function SideDrawer() {\r\n  const classes = useStyles();\r\n\r\n    // Manage the state of the Drawer\r\n    const [drawerIsOpen, setDrawerOpen] = useState(false);\r\n        console.log(\"drawerIsOpen: \" + drawerIsOpen)\r\n  \r\n    function toggleDrawer() {\r\n        setDrawerOpen(prevState => !prevState);\r\n    }\r\n\r\n    function closeDrawer() {\r\n        setDrawerOpen(false);\r\n    }\r\n\r\n    // Manage the state of the Login Modal\r\n    const [modalIsOpen, setModalOpen] = useState(false);\r\n        console.log(\"modalIsOpen: \" + modalIsOpen)\r\n\r\n    function toggleModal() {\r\n        setModalOpen(prevState => !prevState);\r\n        setDrawerOpen(false)\r\n    }\r\n\r\n    function closeModal() {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {/* display drawer icon */}\r\n            <div onClick={toggleDrawer}>\r\n                {!drawerIsOpen ? <BottomHamburger/> : <BottomClose/> }\r\n            </div>\r\n\r\n            {/* display drawer contents*/}\r\n            <Drawer\r\n                open={drawerIsOpen}\r\n                onClose={closeDrawer}\r\n                className={classes.drawer}\r\n                variant=\"temporary\"\r\n                elevation={3}\r\n                anchor=\"right\"\r\n                transitionDuration={{\r\n                    enter: transitionDuration,\r\n                    exit: transitionDuration\r\n                }}\r\n                classes={{\r\n                    paper: classes.drawerPaper\r\n                }}\r\n                PaperProps={{ elevation: 9 }}\r\n            >\r\n                <DrawerLinks\r\n                    toggleModal={toggleModal}\r\n                    closeDrawer={closeDrawer}\r\n                    modalIsOpen={modalIsOpen}\r\n                />\r\n            </Drawer>\r\n\r\n            {/* display login modal when link selected */}\r\n            <LoginModal\r\n                isOpen={modalIsOpen}\r\n                closeModal={closeModal}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport {  Route, Switch } from \"react-router-dom\";\n//used HashRouter in order to deploy to gh pages; set up in index.js\n//BrowserRouter as Router,\n//import Navigation from \"./components/Navigation\";\n//import Footer from \"./components/Footer\"\nimport Home from \"./pages/Home\"\nimport \"./App.css\";\nimport TestPage from \"./pages/TestPage\";\nimport Card from \"react-bootstrap/Card\"\nimport SideDrawer from \"./components/SideDrawer\";\nconst App = () => {\n    return (\n      <div className=\"App\">\n        {/* <Router> */}\n          <div>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/test-page\">\n                <TestPage />\n              </Route>\n            </Switch>\n           \n            <Card><h4>I am a card, YEAH!</h4></Card>\n            <SideDrawer/>\n            {/* <BottomHamburger /> */}\n            {/* <Footer/> */}\n\n          </div>\n        {/* </Router> */}\n      </div>\n    );\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { HashRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./index.css\";\nimport App from \"./App\";\n\n\n// use HashRouter when deploying to gh-pages\nReactDOM.render(\n    // todo: look up:\n    // <React.StrictMode>\n      // name of the github repo\n      <HashRouter basename=\"/new-mern-practice\">\n        <App />\n      </HashRouter>,\n    // </React.StrictMode>,\n    document.getElementById('root')\n  );\n  registerServiceWorker();"],"sourceRoot":""}